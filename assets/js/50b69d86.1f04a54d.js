"use strict";(self.webpackChunkpygeoweaver=self.webpackChunkpygeoweaver||[]).push([[8698],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=o.createContext({}),p=function(e){var t=o.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},f="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},w=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),f=p(r),w=n,d=f["".concat(s,".").concat(w)]||f[w]||u[w]||a;return r?o.createElement(d,i(i({ref:t},c),{},{components:r})):o.createElement(d,i({ref:t},c))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=w;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[f]="string"==typeof e?e:n,i[1]=l;for(var p=2;p<a;p++)i[p]=r[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}w.displayName="MDXCreateElement"},2382:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var o=r(7462),n=(r(7294),r(3905));const a={title:"get_workflow_history"},i=void 0,l={unversionedId:"api-ref/get-workflow-history",id:"api-ref/get-workflow-history",title:"get_workflow_history",description:"getworkflowhistory(workflow_id)",source:"@site/docs/api-ref/get-workflow-history.md",sourceDirName:"api-ref",slug:"/api-ref/get-workflow-history",permalink:"/pygeoweaver-docs.github.io/docs/next/api-ref/get-workflow-history",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api-ref/get-workflow-history.md",tags:[],version:"current",frontMatter:{title:"get_workflow_history"},sidebar:"documentationSidebar",previous:{title:"get_process_history",permalink:"/pygeoweaver-docs.github.io/docs/next/api-ref/get-process-history"},next:{title:"helpwith",permalink:"/pygeoweaver-docs.github.io/docs/next/api-ref/help-with"}},s={},p=[{value:"<code>get_workflow_history(workflow_id)</code>",id:"get_workflow_historyworkflow_id",level:4}],c={toc:p},f="wrapper";function u(e){let{components:t,...r}=e;return(0,n.kt)(f,(0,o.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h4",{id:"get_workflow_historyworkflow_id"},(0,n.kt)("inlineCode",{parentName:"h4"},"get_workflow_history(workflow_id)")),(0,n.kt)("p",null,"Function to retrieve the list of history entries for a workflow using the workflow ID."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters:")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"workflow_id")," (str): The ID of the workflow to retrieve the history for.")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Returns:")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"DataFrame"),": A pandas DataFrame containing the workflow history information.")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Notes:")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"This function sends a POST request to the GeoWeaver API endpoint to retrieve the workflow history."),(0,n.kt)("li",{parentName:"ul"},"The response is converted to a pandas DataFrame for easier data manipulation and analysis."),(0,n.kt)("li",{parentName:"ul"},"The DataFrame includes columns for the history begin time and end time, converted to datetime format.")))}u.isMDXComponent=!0}}]);