"use strict";(self.webpackChunkpygeoweaver=self.webpackChunkpygeoweaver||[]).push([[7251],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>w});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var a=n.createContext({}),p=function(e){var t=n.useContext(a),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(a.Provider,{value:t},e.children)},f="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),f=p(r),d=o,w=f["".concat(a,".").concat(d)]||f[d]||u[d]||i;return r?n.createElement(w,s(s({ref:t},c),{},{components:r})):n.createElement(w,s({ref:t},c))}));function w(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,s=new Array(i);s[0]=d;var l={};for(var a in t)hasOwnProperty.call(t,a)&&(l[a]=t[a]);l.originalType=e,l[f]="string"==typeof e?e:o,s[1]=l;for(var p=2;p<i;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3779:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=r(7462),o=(r(7294),r(3905));const i={title:"list_processes_in_workflow"},s=void 0,l={unversionedId:"api-ref/list-processes-in-workflow",id:"version-0.6.19/api-ref/list-processes-in-workflow",title:"list_processes_in_workflow",description:"listprocessesinworkflow(workflowid)",source:"@site/versioned_docs/version-0.6.19/api-ref/list-processes-in-workflow.md",sourceDirName:"api-ref",slug:"/api-ref/list-processes-in-workflow",permalink:"/pygeoweaver-docs.github.io/docs/api-ref/list-processes-in-workflow",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-0.6.19/api-ref/list-processes-in-workflow.md",tags:[],version:"0.6.19",frontMatter:{title:"list_processes_in_workflow"},sidebar:"documentationSidebar",previous:{title:"list_hosts",permalink:"/pygeoweaver-docs.github.io/docs/api-ref/list-hosts"},next:{title:"list_processes",permalink:"/pygeoweaver-docs.github.io/docs/api-ref/list-processes"}},a={},p=[{value:"<code>list_processes_in_workflow(workflow_id)</code>",id:"list_processes_in_workflowworkflow_id",level:4}],c={toc:p},f="wrapper";function u(e){let{components:t,...r}=e;return(0,o.kt)(f,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h4",{id:"list_processes_in_workflowworkflow_id"},(0,o.kt)("inlineCode",{parentName:"h4"},"list_processes_in_workflow(workflow_id)")),(0,o.kt)("p",null,"Function to list all processes in a specified workflow."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Args:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"workflow_id")," (str): The ID of the workflow.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returns:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"If executed in an IPython environment:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"result")," (pandas.DataFrame): A DataFrame containing the process titles and IDs in the workflow."))),(0,o.kt)("li",{parentName:"ul"},"If executed in a non-IPython environment:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"result")," (list): A list of dictionaries containing the process titles and IDs in the workflow.")))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Raises:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Exception"),": If the GeoWeaver JAR file is not found or if the workflow details cannot be retrieved.")))}u.isMDXComponent=!0}}]);