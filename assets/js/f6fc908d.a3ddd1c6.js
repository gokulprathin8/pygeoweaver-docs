"use strict";(self.webpackChunkpygeoweaver=self.webpackChunkpygeoweaver||[]).push([[4367],{3905:(e,o,t)=>{t.d(o,{Zo:()=>u,kt:()=>m});var r=t(7294);function i(e,o,t){return o in e?Object.defineProperty(e,o,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[o]=t,e}function n(e,o){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);o&&(r=r.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var o=1;o<arguments.length;o++){var t=null!=arguments[o]?arguments[o]:{};o%2?n(Object(t),!0).forEach((function(o){i(e,o,t[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(t,o))}))}return e}function l(e,o){if(null==e)return{};var t,r,i=function(e,o){if(null==e)return{};var t,r,i={},n=Object.keys(e);for(r=0;r<n.length;r++)t=n[r],o.indexOf(t)>=0||(i[t]=e[t]);return i}(e,o);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)t=n[r],o.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=r.createContext({}),s=function(e){var o=r.useContext(p),t=o;return e&&(t="function"==typeof e?e(o):a(a({},o),e)),t},u=function(e){var o=s(e.components);return r.createElement(p.Provider,{value:o},e.children)},f="mdxType",c={inlineCode:"code",wrapper:function(e){var o=e.children;return r.createElement(r.Fragment,{},o)}},w=r.forwardRef((function(e,o){var t=e.components,i=e.mdxType,n=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),f=s(t),w=i,m=f["".concat(p,".").concat(w)]||f[w]||c[w]||n;return t?r.createElement(m,a(a({ref:o},u),{},{components:t})):r.createElement(m,a({ref:o},u))}));function m(e,o){var t=arguments,i=o&&o.mdxType;if("string"==typeof e||i){var n=t.length,a=new Array(n);a[0]=w;var l={};for(var p in o)hasOwnProperty.call(o,p)&&(l[p]=o[p]);l.originalType=e,l[f]="string"==typeof e?e:i,a[1]=l;for(var s=2;s<n;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}w.displayName="MDXCreateElement"},2099:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>p,contentTitle:()=>a,default:()=>c,frontMatter:()=>n,metadata:()=>l,toc:()=>s});var r=t(7462),i=(t(7294),t(3905));const n={title:"Import a existing workflow"},a=void 0,l={unversionedId:"user-guide/import-workflow",id:"user-guide/import-workflow",title:"Import a existing workflow",description:"With Pygeoweaver, you can import workflows from existing files using the import_workflow function. This allows you to easily bring in workflows saved as zip files. Here's how you can use this function:",source:"@site/docs/user-guide/import-workflow.md",sourceDirName:"user-guide",slug:"/user-guide/import-workflow",permalink:"/pygeoweaver-docs.github.io/docs/user-guide/import-workflow",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/user-guide/import-workflow.md",tags:[],version:"current",frontMatter:{title:"Import a existing workflow"},sidebar:"documentationSidebar",previous:{title:"Viewing History",permalink:"/pygeoweaver-docs.github.io/docs/user-guide/history"},next:{title:"View Hosts, Processes & Workflow",permalink:"/pygeoweaver-docs.github.io/docs/user-guide/list"}},p={},s=[{value:"Importing a Workflow",id:"importing-a-workflow",level:3},{value:"<code>import_workflow(workflow_zip_file_path)</code>",id:"import_workflowworkflow_zip_file_path",level:4}],u={toc:s},f="wrapper";function c(e){let{components:o,...t}=e;return(0,i.kt)(f,(0,r.Z)({},u,t,{components:o,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"With Pygeoweaver, you can import workflows from existing files using the ",(0,i.kt)("inlineCode",{parentName:"p"},"import_workflow")," function. This allows you to easily bring in workflows saved as zip files. Here's how you can use this function:"),(0,i.kt)("h3",{id:"importing-a-workflow"},"Importing a Workflow"),(0,i.kt)("h4",{id:"import_workflowworkflow_zip_file_path"},(0,i.kt)("inlineCode",{parentName:"h4"},"import_workflow(workflow_zip_file_path)")),(0,i.kt)("p",null,"This function imports a workflow from a zip file specified by the ",(0,i.kt)("inlineCode",{parentName:"p"},"workflow_zip_file_path"),"."),(0,i.kt)("p",null,"Usage:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"import_workflow(workflow_zip_file_path)\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"workflow_zip_file_path"),": The file path to the Geoweaver workflow zip file.")),(0,i.kt)("p",null,"Note: Before using this function, ensure that you have downloaded the Geoweaver JAR file and configured the Java binaries in your environment."),(0,i.kt)("p",null,"By utilizing the ",(0,i.kt)("inlineCode",{parentName:"p"},"import_workflow")," function, you can seamlessly import workflows into Pygeoweaver, allowing you to work with existing workflows and leverage their functionality for your geospatial data processing tasks."))}c.isMDXComponent=!0}}]);