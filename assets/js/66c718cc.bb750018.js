"use strict";(self.webpackChunkpygeoweaver=self.webpackChunkpygeoweaver||[]).push([[6050],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=c(n),d=o,f=m["".concat(p,".").concat(d)]||m[d]||u[d]||i;return n?r.createElement(f,a(a({ref:t},s),{},{components:n})):r.createElement(f,a({ref:t},s))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[m]="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6470:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const i={title:"helpwith"},a=void 0,l={unversionedId:"api-ref/help-with",id:"version-0.6.19/api-ref/help-with",title:"helpwith",description:"helpwith(command_list: list = [])",source:"@site/versioned_docs/version-0.6.19/api-ref/help-with.md",sourceDirName:"api-ref",slug:"/api-ref/help-with",permalink:"/pygeoweaver-docs.github.io/docs/api-ref/help-with",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-0.6.19/api-ref/help-with.md",tags:[],version:"0.6.19",frontMatter:{title:"helpwith"},sidebar:"documentationSidebar",previous:{title:"get_workflow_history",permalink:"/pygeoweaver-docs.github.io/docs/api-ref/get-workflow-history"},next:{title:"import_workflow",permalink:"/pygeoweaver-docs.github.io/docs/api-ref/import-workflow"}},p={},c=[{value:"<code>helpwith(command_list: list = [])</code>",id:"helpwithcommand_list-list--",level:4}],s={toc:c},m="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(m,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h4",{id:"helpwithcommand_list-list--"},(0,o.kt)("inlineCode",{parentName:"h4"},"helpwith(command_list: list = [])")),(0,o.kt)("p",null,"Function to display help information for a specific command or subcommand in GeoWeaver."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Parameters:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"command_list")," (list): A list of strings representing the command and subcommands to retrieve help information for. Defaults to an empty list.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Notes:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"This function constructs a command to execute using the ",(0,o.kt)("inlineCode",{parentName:"li"},"get_java_bin_path")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"get_geoweaver_jar_path")," functions."),(0,o.kt)("li",{parentName:"ul"},"If the ",(0,o.kt)("inlineCode",{parentName:"li"},"command_list")," is provided, it appends the command and subcommands to the target command."),(0,o.kt)("li",{parentName:"ul"},"The constructed command runs the GeoWeaver JAR file with the ",(0,o.kt)("inlineCode",{parentName:"li"},"help")," argument and the specified command and subcommands."),(0,o.kt)("li",{parentName:"ul"},"The function displays the help information in the console.")))}u.isMDXComponent=!0}}]);