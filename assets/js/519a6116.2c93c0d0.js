"use strict";(self.webpackChunkpygeoweaver=self.webpackChunkpygeoweaver||[]).push([[8017],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>m});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},i=Object.keys(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=o.createContext({}),u=function(e){var t=o.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},d=function(e){var t=u(e.components);return o.createElement(p.Provider,{value:t},e.children)},f="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},s=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),f=u(r),s=n,m=f["".concat(p,".").concat(s)]||f[s]||c[s]||i;return r?o.createElement(m,a(a({ref:t},d),{},{components:r})):o.createElement(m,a({ref:t},d))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,a=new Array(i);a[0]=s;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[f]="string"==typeof e?e:n,a[1]=l;for(var u=2;u<i;u++)a[u]=r[u];return o.createElement.apply(null,a)}return o.createElement.apply(null,r)}s.displayName="MDXCreateElement"},7552:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var o=r(7462),n=(r(7294),r(3905));const i={title:"export_workflow"},a=void 0,l={unversionedId:"api-ref/export-workflow",id:"api-ref/export-workflow",title:"export_workflow",description:"exportworkflow(workflowid, mode=4, targetfilepath=None, unzip=False, unzipdirectoryname=None)",source:"@site/docs/api-ref/export-workflow.md",sourceDirName:"api-ref",slug:"/api-ref/export-workflow",permalink:"/pygeoweaver-docs.github.io/docs/api-ref/export-workflow",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api-ref/export-workflow.md",tags:[],version:"current",frontMatter:{title:"export_workflow"},sidebar:"documentationSidebar",previous:{title:"detail_workflow",permalink:"/pygeoweaver-docs.github.io/docs/api-ref/detail-workflow"},next:{title:"get_process_by_id",permalink:"/pygeoweaver-docs.github.io/docs/api-ref/get-process-by-id"}},p={},u=[{value:"<code>export_workflow(workflow_id, mode=4, target_file_path=None, unzip=False, unzip_directory_name=None)</code>",id:"export_workflowworkflow_id-mode4-target_file_pathnone-unzipfalse-unzip_directory_namenone",level:4}],d={toc:u},f="wrapper";function c(e){let{components:t,...r}=e;return(0,n.kt)(f,(0,o.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h4",{id:"export_workflowworkflow_id-mode4-target_file_pathnone-unzipfalse-unzip_directory_namenone"},(0,n.kt)("inlineCode",{parentName:"h4"},"export_workflow(workflow_id, mode=4, target_file_path=None, unzip=False, unzip_directory_name=None)")),(0,n.kt)("p",null,"Function to export a workflow from GeoWeaver."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters:")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"workflow_id")," (str): The ID of the workflow to export."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"mode")," (int): The export mode options:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"1")," - Export workflow only."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"2")," - Export workflow with process code."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"3")," - Export workflow with process code and only good history."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"4")," - Export workflow with process code and all history. (default mode)"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"target_file_path")," (str): The target file path to save the exported workflow ZIP file."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"unzip")," (bool): Flag to specify if the exported workflow should be unzipped. Default is ",(0,n.kt)("inlineCode",{parentName:"li"},"False"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"unzip_directory_name")," (str): The name of the directory to extract the unzipped workflow. Required if ",(0,n.kt)("inlineCode",{parentName:"li"},"unzip")," is ",(0,n.kt)("inlineCode",{parentName:"li"},"True"),".")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Raises:")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"RuntimeError"),": If the workflow ID is missing."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Exception"),": If ",(0,n.kt)("inlineCode",{parentName:"li"},"unzip")," is ",(0,n.kt)("inlineCode",{parentName:"li"},"True")," but ",(0,n.kt)("inlineCode",{parentName:"li"},"unzip_directory_name")," is not provided.")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Notes:")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"This function internally calls the ",(0,n.kt)("inlineCode",{parentName:"li"},"download_geoweaver_jar()")," function and executes a subprocess to export the specified workflow from GeoWeaver."),(0,n.kt)("li",{parentName:"ul"},"The exported workflow is saved as a ZIP file at the specified ",(0,n.kt)("inlineCode",{parentName:"li"},"target_file_path"),"."),(0,n.kt)("li",{parentName:"ul"},"If ",(0,n.kt)("inlineCode",{parentName:"li"},"unzip")," is ",(0,n.kt)("inlineCode",{parentName:"li"},"True"),", the exported workflow ZIP file is extracted to the specified ",(0,n.kt)("inlineCode",{parentName:"li"},"unzip_directory_name")," within the same directory.")))}c.isMDXComponent=!0}}]);