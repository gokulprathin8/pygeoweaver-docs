"use strict";(self.webpackChunkpygeoweaver=self.webpackChunkpygeoweaver||[]).push([[4615],{3905:(e,o,r)=>{r.d(o,{Zo:()=>u,kt:()=>m});var t=r(7294);function i(e,o,r){return o in e?Object.defineProperty(e,o,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[o]=r,e}function n(e,o){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);o&&(t=t.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var o=1;o<arguments.length;o++){var r=null!=arguments[o]?arguments[o]:{};o%2?n(Object(r),!0).forEach((function(o){i(e,o,r[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(r,o))}))}return e}function l(e,o){if(null==e)return{};var r,t,i=function(e,o){if(null==e)return{};var r,t,i={},n=Object.keys(e);for(t=0;t<n.length;t++)r=n[t],o.indexOf(r)>=0||(i[r]=e[r]);return i}(e,o);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(t=0;t<n.length;t++)r=n[t],o.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=t.createContext({}),p=function(e){var o=t.useContext(s),r=o;return e&&(r="function"==typeof e?e(o):a(a({},o),e)),r},u=function(e){var o=p(e.components);return t.createElement(s.Provider,{value:o},e.children)},f="mdxType",w={inlineCode:"code",wrapper:function(e){var o=e.children;return t.createElement(t.Fragment,{},o)}},c=t.forwardRef((function(e,o){var r=e.components,i=e.mdxType,n=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),f=p(r),c=i,m=f["".concat(s,".").concat(c)]||f[c]||w[c]||n;return r?t.createElement(m,a(a({ref:o},u),{},{components:r})):t.createElement(m,a({ref:o},u))}));function m(e,o){var r=arguments,i=o&&o.mdxType;if("string"==typeof e||i){var n=r.length,a=new Array(n);a[0]=c;var l={};for(var s in o)hasOwnProperty.call(o,s)&&(l[s]=o[s]);l.originalType=e,l[f]="string"==typeof e?e:i,a[1]=l;for(var p=2;p<n;p++)a[p]=r[p];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}c.displayName="MDXCreateElement"},3669:(e,o,r)=>{r.r(o),r.d(o,{assets:()=>s,contentTitle:()=>a,default:()=>w,frontMatter:()=>n,metadata:()=>l,toc:()=>p});var t=r(7462),i=(r(7294),r(3905));const n={title:"Import a existing workflow"},a=void 0,l={unversionedId:"user-guide/import-workflow",id:"version-0.6.19/user-guide/import-workflow",title:"Import a existing workflow",description:"With Pygeoweaver, you can import workflows from existing files using the import_workflow function. This allows you to easily bring in workflows saved as zip files. Here's how you can use this function:",source:"@site/versioned_docs/version-0.6.19/user-guide/import-workflow.md",sourceDirName:"user-guide",slug:"/user-guide/import-workflow",permalink:"/pygeoweaver-docs.github.io/docs/user-guide/import-workflow",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-0.6.19/user-guide/import-workflow.md",tags:[],version:"0.6.19",frontMatter:{title:"Import a existing workflow"},sidebar:"documentationSidebar",previous:{title:"Viewing History",permalink:"/pygeoweaver-docs.github.io/docs/user-guide/history"},next:{title:"View Hosts, Processes & Workflow",permalink:"/pygeoweaver-docs.github.io/docs/user-guide/list"}},s={},p=[{value:"Importing a Workflow",id:"importing-a-workflow",level:3},{value:"<code>import_workflow(workflow_zip_file_path)</code>",id:"import_workflowworkflow_zip_file_path",level:4}],u={toc:p},f="wrapper";function w(e){let{components:o,...r}=e;return(0,i.kt)(f,(0,t.Z)({},u,r,{components:o,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"With Pygeoweaver, you can import workflows from existing files using the ",(0,i.kt)("inlineCode",{parentName:"p"},"import_workflow")," function. This allows you to easily bring in workflows saved as zip files. Here's how you can use this function:"),(0,i.kt)("h3",{id:"importing-a-workflow"},"Importing a Workflow"),(0,i.kt)("h4",{id:"import_workflowworkflow_zip_file_path"},(0,i.kt)("inlineCode",{parentName:"h4"},"import_workflow(workflow_zip_file_path)")),(0,i.kt)("p",null,"This function imports a workflow from a zip file specified by the ",(0,i.kt)("inlineCode",{parentName:"p"},"workflow_zip_file_path"),"."),(0,i.kt)("p",null,"Usage:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"import_workflow(workflow_zip_file_path)\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"workflow_zip_file_path"),": The file path to the Geoweaver workflow zip file.")),(0,i.kt)("p",null,"Note: Before using this function, ensure that you have downloaded the Geoweaver JAR file and configured the Java binaries in your environment."),(0,i.kt)("p",null,"By utilizing the ",(0,i.kt)("inlineCode",{parentName:"p"},"import_workflow")," function, you can seamlessly import workflows into Pygeoweaver, allowing you to work with existing workflows and leverage their functionality for your geospatial data processing tasks."))}w.isMDXComponent=!0}}]);